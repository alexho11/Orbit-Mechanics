% Orbit Mechanics Exercise 1
% Keplerian Orbits in Space-fixed, Earth-fixed and Topocentric systems
% Hsin-Feng Ho 03770686

% Clear memory and command window
clear all; clc; close all;

% Load satellite data
sat_name={'GOCE','GPS','Molniya','GEO','Michibiki'};
% Keplerian elements: a,e,i,Omega,omega,T
% a: semi-major axis (m)
% e: eccentricity
% i: inclination (deg)
% Omega: right ascension of the ascending node (deg)
% omega: argument of perigee (deg)
% T: time of perigee passage (s) 
% orbit for geostationary satellite is about 35786 km above the Earth's
sat=[6629,0.004,96.6,210,144,1;
     26560,0.01,55,30,30,11;
     26554,0.7,63,200,270,5;
     42164,0,0,0,50,0;
     42164,0.075,41,200,270,19];

% convert units
sat(:,1)=sat(:,1)*1000; % a (km->m)
sat(:,3:5)=sat(:,3:5)*pi/180; % i,Omega,omega (deg->rad)
sat(:,6)=sat(:,6)*3600; % T (h->s)

% calculate polar coordinates
%[r,nu,~]=kep2orb(sat(:,1),sat(:,2),sat(:,6),0);
GM=3.986004418e14; % Earth's gravitational constant (m^3/s^2)
T_orb=2*pi*sqrt(sat(:,1).^3/GM); % orbital period (s)
figure;
for i=1:length(sat_name)
    t=0:T_orb(i);
    [r_sat,nu_sat,~]=kep2orb(sat(i,1),sat(i,2),t,0);
    plot(r_sat.*cos(nu_sat),r_sat.*sin(nu_sat),'LineWidth',2);
    hold on
end

legend(sat_name,'Location','best');

axis('equal');
xlim([-5e7,5e7]);
ylim([-5e7,5e7]);
xlabel('x (m)');
ylabel('y (m)');
title('Orbits in a 2D plane');
plotME(sat(2,1),sat(2,2),sat_name{2});


t=0:24*3600; % time (s)
figure; % Create a new figure window with specified position and size
hold on 
for i=1:length(sat_name)
    [ri,ri_dot]=kep2cart(sat(i,1),sat(i,2),t,0,sat(i,3),sat(i,4),sat(i,5));
    Ri{i}=ri;
    Ri_dot{i}=ri_dot;
    plot3(ri(1,:),ri(2,:),ri(3,:),'LineWidth',2);
end
legend(sat_name,'Location','best','AutoUpdate','off');
title('Orbit of 5 Satellites in 3D','FontSize',15);
xlabel('x (m)');
ylabel('y (m)');
zlabel('z (m)');
Earth_coast(3);
view([90 30])
% project in the x-y plane
figure;
hold on;
for i=1:length(sat_name)
    plot(Ri{i}(1,:),Ri{i}(2,:),'LineWidth',2);
end
legend(sat_name,'Location','best','AutoUpdate','off');
title('Orbit of 5 Satellites in x-y plane','FontSize',15);
xlabel('x (m)');
ylabel('y (m)');
% project in the x-z plane
figure;
hold on;
for i=1:length(sat_name)
    plot(Ri{i}(1,:),Ri{i}(3,:),'LineWidth',2);
end
legend(sat_name,'Location','best','AutoUpdate','off');
title('Orbit of 5 Satellites in x-z plane','FontSize',15);
xlabel('x (m)');
ylabel('z (m)');
% project in the y-z plane
figure;
hold on;
for i=1:length(sat_name)
    plot(Ri{i}(2,:),Ri{i}(3,:),'LineWidth',2);
end
legend(sat_name,'Location','best','AutoUpdate','off');
title('Orbit of 5 Satellites in y-z plane','FontSize',15);
xlabel('y (m)');
ylabel('z (m)');
% plot the magnitude of velocity with time
figure;
hold on;
for i=1:length(sat_name)
    v=sqrt(Ri_dot{i}(1,:).^2+Ri_dot{i}(2,:).^2+Ri_dot{i}(3,:).^2);
    plot(t/3600,v,'LineWidth',4);
end
legend(sat_name,'Location','best','AutoUpdate','off');
title('Velocity of 5 Satellites with Time','FontSize',15);
xlabel('Time (hours)');
ylabel('Velocity (m/s)');



figure;
hold on
for i=1:length(sat_name)
    t=linspace(0,2*T_orb(i));
    [ri,ri_dot]=kep2cart(sat(i,1),sat(i,2),t,0,sat(i,3),sat(i,4),sat(i,5));
    [re,re_dot]=cart2efix(ri,ri_dot,t);
    if i==4
        plot3(re(1,:),re(2,:),re(3,:),'*','LineWidth',20);
    else
        plot3(re(1,:),re(2,:),re(3,:),'LineWidth',2);
    end
end
title('Orbit of 5 Satellites in Earth-fixed system','FontSize',15);
xlabel('x (m)');
ylabel('y (m)');
zlabel('z (m)');
legend(sat_name,'Location','best','AutoUpdate','off');
Earth_coast(3);
view([90 30])

% figure;
% hold on
% colors = jet(length(sat_name)); % Create a color map
% colors(4,2)=0;
% h = zeros(1, length(sat_name)); % Initialize handle array
% for i=1:length(sat_name)
%     h(i) = plot(NaN, NaN, 'Color', colors(i,:), 'LineWidth', 2); % Create a dummy line for the legend
%     t=0:2*T_orb(i);
%     lambda_cell = {};
%     phi_cell = {};
%     lambda_prev = inf;
%     for j=1:length(t)
%         [ri,ri_dot]=kep2cart(sat(i,1),sat(i,2),t(j),0,sat(i,3),sat(i,4),sat(i,5));
%         [re,re_dot]=cart2efix(ri,ri_dot,t(j));
%         lambda=atan2(re(2,:),re(1,:))*180/pi;
%         phi=atan2(re(3,:),sqrt(re(1,:).^2+re(2,:).^2))*180/pi;
%         if abs(lambda - lambda_prev) > 180
%             lambda_cell{end+1} = lambda;
%             phi_cell{end+1} = phi;
%         else
%             lambda_cell{end} = [lambda_cell{end}, lambda];
%             phi_cell{end} = [phi_cell{end}, phi];
%         end
%         lambda_prev = lambda;
%     end
%     if i==4
%         scatter(lambda(1),phi(1),'MarkerEdgeColor',colors(i,:),'MarkerFaceColor',colors(i,:),'LineWidth',4)
%     else
%         for k=1:length(lambda_cell)
%             plot(lambda_cell{k}, phi_cell{k}, 'Color', colors(i,:), 'LineWidth', 4); % Specify the color
%         end
%     end
% end
% legend(h, sat_name,'Location','best','AutoUpdate','off'); % Use the dummy lines for the legend
% Earth_coast(2);
% title('Ground tracks of 5 Satellites','FontSize',15);
% xlabel('Longitude (deg)');
% ylabel('Latitude (deg)');

figure;
set(gca,'visible','off')
hold on
c={'+b','+g','+c','*r','+m'};
for i=1:length(sat_name)
    t=0:2*T_orb(i);
    [ri,ri_dot]=kep2cart(sat(i,1),sat(i,2),t,0,sat(i,3),sat(i,4),sat(i,5));
    [re,re_dot]=cart2efix(ri,ri_dot,t);
    [rt,rt_dot,az,elev]=efix2topo(re,re_dot);
    az=az*180/pi;
    elev=elev*180/pi;
    elev(elev < 0) = NaN; % Set negative values in elev to NaN
    pax = polaraxes; % Create polar axes
    skyplot(az,elev,c{i}); % Plot the data using skyplot function
end
title('Skyplot of 5 Satellites','FontSize',15);


figure;
t=1:24*3600;
t_hours = t / 3600; % Convert t to hours
c={'b','g','c','r','m'};
for i=1:length(sat_name)
    [re,re_dot]=cart2efix(Ri{i},Ri_dot{i},t);
    [rt,rt_dot,az,elev]=efix2topo(re,re_dot);
    az=az*180/pi;
    elev=elev*180/pi;
    subplot(5,1,i);
    area(t_hours,elev>0,'FaceColor',c{i},'EdgeColor',c{i}); % Fill the area under the plot
    xticks(0:2:24); % Set x-axis ticks
    xticklabels(string(0:2:24)); % Set x-axis labels
    xlabel('Time (hours)'); % Label the x-axis
    title(sat_name{i})
    xlim([0 24]); % Set x-axis limits
end

function plotME(a,e,sat)
    GM=3.986004418e14; % Earth's gravitational constant (m^3/s^2)
    n=sqrt(GM/a^3);
    t=0:12*3600;
    M=n*t;
    E = M;
    delta = 1;
    while abs(delta)>10^-10
        E_new = M+e.*sin(E);
        delta = E_new-E;
        E = E_new;
    end
    % calculate the true anomaly
    nu=atan2(sqrt((1+e)/(1-e)).*tan(E./2),1)*2;
    nu(nu<0)=nu(nu<0)+2*pi;
    figure;
    plot(t/3600,M/pi*180,"LineWidth",2);
    xlabel('Time (hours)');
    ylabel('Angle (deg)');
    hold on
    plot(t/3600,E/pi*180,"LineWidth",2);
    plot(t/3600,nu/pi*180,"LineWidth",2);
    plot(t/3600,nu/pi*180-M/pi*180,"LineWidth",2);
    legend('Mean anomaly','Eccentric anomaly','True anomaly','True anomaly - Mean anomaly','Location','best');
    title(append('M,E,nu of the ', sat, ' satellite'));
end
